# Docker Compose configuration for Downstairs local development
# This file defines the network topology and container organization

networks:
  downstairs-local:
    name: downstairs-local
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  # Infrastructure Services
  downstairs-mysql:
    image: mysql:8.0
    container_name: downstairs-mysql
    networks:
      - downstairs-local
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: downstairs
      MYSQL_ROOT_HOST: '%'
    volumes:
      - mysql-data:/var/lib/mysql
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --max-connections=200
    labels:
      - "project.group=downstairs-infrastructure"
      - "project.name=downstairs"
      - "service.type=database"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 60s

  downstairs-redis:
    image: redis:7-alpine
    container_name: downstairs-redis
    networks:
      - downstairs-local
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    labels:
      - "project.group=downstairs-infrastructure"
      - "project.name=downstairs"
      - "service.type=cache"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Application Services (These will be managed by Aspire, but network can be shared)
  # The Aspire host will connect these services to the downstairs-local network

volumes:
  mysql-data:
    name: downstairs-mysql-data
  redis-data:
    name: downstairs-redis-data